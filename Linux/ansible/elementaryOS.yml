---
- name: Configuring elementaryOS 0.5.x
  hosts: localhost
  vars:
    terminal_colors: "'#1b2b34:#343d46:#4f5b66:#65737e:#a7adba:#c0c5ce:#cdd3de:#d8dee9:#ec5f67:#f99157:#fac863:#99c794:#62b3b2:#6699cc:#c594c5:#ab7967:#ffffff'"
  tasks:
    - name: Add VSCode repository
      become: yes
      copy:
        dest: "/etc/apt/sources.list.d/vscode.list"
        content: |
          deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main

    - name: Add Microsoft GPG key for packages
      become: yes
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        keyring: /usr/share/keyrings/packages.microsoft.gpg
        state: present

    - name: Add elementary Tweaks repository
      become: yes
      apt_repository:
        repo: ppa:philip.scott/elementary-tweaks

    - name: Remove some of the pre-installed software
      become: yes
      apt:
        name: vim, epiphany-browser
        state: absent

    - name: Update repository and packages
      become: yes
      apt:
        update_cache: yes
        upgrade: "yes"

    - name: Install packages
      become: yes
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - openssh-client
        - firefox
        - neofetch
        - tree
        - vifm
        - code
        - elementary-tweaks
        - git
        - neovim

    - name: Create local user font directory for Fira Code Nerd Font
      file:
        path: ~/.local/share/fonts/firacodenerdfont
        state: directory

    - name: Find latest Nerd Fonts release
      uri:
        url: https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest
        return_content: true
      register: nerdfonts_releases

    - set_fact:
        dl_url: "{{ nerdfonts_releases.json.assets | selectattr('name', 'equalto', 'FiraCode.zip') | list }}"

    - name: Download and extract Fira Code Patched Nerd Font
      unarchive:
        src: "{{ dl_url[0].browser_download_url }}"
        dest: ~/.local/share/fonts/firacodenerdfont
        remote_src: yes

    - name: Get current terminal colors
      command: "gsettings get io.elementary.terminal.settings palette"
      register: current_terminal_colors
      changed_when: false

    - name: Set terminal theme to Oceanic Next Dark
      command: "gsettings set io.elementary.terminal.settings palette {{terminal_colors}}"
      when: current_terminal_colors.stdout != terminal_colors

    - name: Set terminal font to Fira Code
      command: gsettings set io.elementary.terminal.settings font 'Fira Code Retina 12'

    - name: Turn on dark theme
      copy:
        dest: "~/.config/gtk-3.0/settings.ini"
        content: |
          [Settings]
          gtk-application-prefer-dark-theme=1

    - name: Require double-click to open files
      command: gsettings set io.elementary.files.preferences single-click false

    - name: Remove some applications from the dock
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "~/.config/plank/dock1/launchers/org.gnome.Epiphany.dockitem"
        - "~/.config/plank/dock1/launchers/io.elementary.videos.dockitem"
        - "~/.config/plank/dock1/launchers/io.elementary.appcenter.dockitem"

    - name: Create a directory that already exists because ansible is dumb
      command: touch "~/.config/plank/dock1/launchers/io.elementary.terminal.dockitem"

    - name: Pin terminal to the dock
      copy:
        dest: "~/.config/plank/dock1/launchers/io.elementary.terminal.dockitem"
        force: yes
        content: |
          [PlankDockItemPreferences]
          Launcher=file:///usr/share/applications/io.elementary.terminal.desktop

    - name: Pin files to the dock
      copy:
        dest: "~/.config/plank/dock1/launchers/io.elementary.files.dockitem"
        content: |
          [PlankDockItemPreferences]
          Launcher=file:///usr/share/applications/io.elementary.files.desktop

    - name: Create neovim directory
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - ~/.config/nvim
        - ~/.local/share/nvim/site/autoload

    - name: Install vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.local/share/nvim/site/autoload/plug.vim

    - name: Set vimrc
      copy:
        dest: "~/.config/nvim/init.vim"
        content: |
          " Make :W save as superuser
          command W w !sudo tee % > /dev/null

          " 4 spaces instead of Tab
          set expandtab
          set shiftwidth=4
          set tabstop=4

          " Set to auto read when a file is changed from the outside
          set autoread

          " Enable line numbers by default
          set number

          " Ignore case when searching
          set ignorecase

          " Show matching bracket when cursor is hovering one
          set showmatch

          " Turn off backup and swapfiles
          set nobackup
          set nowb
          set noswapfile

          " Highlight current linne
          set cursorline
          highlight Cursorline cterm=bold

          " Load vim-plug plugins
          call plug#begin()
          Plug 'neoclide/coc.nvim', {'branch': 'release'}
          Plug 'scrooloose/nerdtree'
          Plug 'taigacute/spaceline.vim'
          Plug 'ryanoasis/vim-devicons'
          call plug#end()

          " Open NERDTree with Ctrl + B
          map <C-b> :NERDTreeFocus<CR>

          " Close vim if the only window left open is NERDTree
          autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

    - name: Install all vim-plug plugins
      command: nvim -E -s -c "source ~/.config/nvim/init.vim" -c PlugInstall -c qa

