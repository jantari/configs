---
- name: Configuring elementaryOS 0.5.x
  hosts: localhost
  vars:
    terminal_colors: "'#1b2b34:#343d46:#4f5b66:#65737e:#a7adba:#c0c5ce:#cdd3de:#d8dee9:#ec5f67:#f99157:#fac863:#99c794:#62b3b2:#6699cc:#c594c5:#ab7967:#ffffff'"
    terminal_background: "'rgba(27, 43, 52, 0.95)'"
    wpsmi_dir: "{{ ansible_env.HOME }}/Downloads/wingpanel-indicator-sys-monitor"
  tasks:
    - name: Add VSCode repository
      become: yes
      copy:
        dest: "/etc/apt/sources.list.d/vscode.list"
        content: |
          deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main

    - name: Add Microsoft GPG key for packages
      become: yes
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        keyring: /usr/share/keyrings/packages.microsoft.gpg
        state: present

    - name: Add elementary Tweaks repository
      become: yes
      apt_repository:
        repo: ppa:philip.scott/elementary-tweaks

    - name: Remove some of the pre-installed software
      become: yes
      apt:
        name: vim, epiphany-browser
        state: absent

    - name: Update repository and packages
      become: yes
      apt:
        update_cache: yes
        upgrade: "yes"

    - name: Install deb packages
      become: yes
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - openssh-client
        - firefox
        - neofetch
        - tree
        - vifm
        - code
        - elementary-tweaks
        - ttf-ancient-fonts
        - git
        - neovim
        - keepassxc
        - com.github.cassidyjames.ideogram

    - name: Create local user font directory for Fira Code Nerd Font
      file:
        path: ~/.local/share/fonts/firacodenerdfont
        state: directory

    - name: Find latest Nerd Fonts release
      uri:
        url: https://api.github.com/repos/ryanoasis/nerd-fonts/releases/latest
        return_content: true
      register: nerdfonts_releases

    - set_fact:
        dl_url: "{{ nerdfonts_releases.json.assets | selectattr('name', 'equalto', 'FiraCode.zip') | list }}"

    - name: Download and extract Fira Code Patched Nerd Font
      unarchive:
        src: "{{ dl_url[0].browser_download_url }}"
        dest: ~/.local/share/fonts/firacodenerdfont
        remote_src: yes

    - name: Get current terminal colors
      command: "gsettings get io.elementary.terminal.settings palette"
      register: current_terminal_colors
      changed_when: false

    - name: Get current terminal background color
      command: "gsettings get io.elementary.terminal.settings background"
      register: current_terminal_background
      changed_when: false

    - name: Set terminal theme to Oceanic Next Dark
      command: "gsettings set io.elementary.terminal.settings palette {{terminal_colors}}"
      when: current_terminal_colors.stdout != terminal_colors

    - name: Set terminal background color
      command: "gsettings set io.elementary.terminal.settings background {{terminal_background}}"
      when: current_terminal_background.stdout != terminal_background

    - name: Set terminal font to Fura Code patched Nerd Font
      command: gsettings set io.elementary.terminal.settings font 'FuraCode Nerd Font Regular 10'

    - name: Install Oh-My-Bash
      command: "sh -c \"$(curl -fsSL https://raw.github.com/ohmybash/oh-my-bash/master/tools/install.sh)\""
      args:
        creates: ~/.oh-my-bash

    - name: Set agnoster theme for bash prompt
      lineinfile:
        path: ~/.bashrc
        regexp: '^OSH_THEME='
        line: OSH_THEME="agnoster"

    - name: Turn on dark theme
      copy:
        dest: "~/.config/gtk-3.0/settings.ini"
        content: |
          [Settings]
          gtk-application-prefer-dark-theme=1

    - name: Require double-click to open files
      command: gsettings set io.elementary.files.preferences single-click false

    - name: Remove some applications from the dock
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "~/.config/plank/dock1/launchers/org.gnome.Epiphany.dockitem"
        - "~/.config/plank/dock1/launchers/io.elementary.videos.dockitem"
        - "~/.config/plank/dock1/launchers/io.elementary.appcenter.dockitem"

    - name: Create a directory that already exists because ansible is dumb
      command: touch "~/.config/plank/dock1/launchers/io.elementary.terminal.dockitem"

    - name: Pin terminal to the dock
      copy:
        dest: "~/.config/plank/dock1/launchers/io.elementary.terminal.dockitem"
        force: yes
        content: |
          [PlankDockItemPreferences]
          Launcher=file:///usr/share/applications/io.elementary.terminal.desktop

    - name: Pin files to the dock
      copy:
        dest: "~/.config/plank/dock1/launchers/io.elementary.files.dockitem"
        force: yes
        content: |
          [PlankDockItemPreferences]
          Launcher=file:///usr/share/applications/io.elementary.files.desktop

    - name: Set Super+E keybinding to open files
      command: gsettings set org.gnome.settings-daemon.plugins.media-keys home '<Super>e'

    - name: Set Super+. keybinding to open emoji picker
      shell: |
        gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding '<Super>period'
        gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command 'com.github.cassidyjames.ideogram'
        gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name 'Ideogram emoji picker'

    - name: Set git config (username, email)
      copy:
        dest: ~/.gitconfig
        content: |
          [user]
            name = jantari
            email = jantari@github.com

    - name: Create neovim directory
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - ~/.config/nvim
        - ~/.local/share/nvim/site/autoload

    - name: Install vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: ~/.local/share/nvim/site/autoload/plug.vim

    - name: Set vimrc
      copy:
        dest: "~/.config/nvim/init.vim"
        content: |
          " Make :W save as superuser
          command W w !sudo tee % > /dev/null

          " 4 spaces instead of Tab
          set expandtab
          set shiftwidth=4
          set tabstop=4

          " Set to auto read when a file is changed from the outside
          set autoread

          " Enable line numbers by default
          set number

          " Ignore case when searching
          set ignorecase

          " Show matching bracket when cursor is hovering one
          set showmatch

          " Turn off backup and swapfiles
          set nobackup
          set nowb
          set noswapfile

          " Highlight current linne
          set cursorline
          highlight Cursorline cterm=bold

          " Load vim-plug plugins
          call plug#begin()
          Plug 'neoclide/coc.nvim', {'branch': 'release'}
          Plug 'scrooloose/nerdtree'
          Plug 'taigacute/spaceline.vim'
          Plug 'ryanoasis/vim-devicons'
          call plug#end()

          " Open NERDTree with Ctrl + B
          map <C-b> :NERDTreeFocus<CR>

          " Close vim if the only window left open is NERDTree
          autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

    - name: Install all vim-plug plugins
      command: nvim -E -s -c "source ~/.config/nvim/init.vim" -c PlugInstall -c qa

    - name: Install dependencies for Wingpanel System Monitor Indicator
      become: yes
      apt:
        name: "{{ packages }}"
      vars:
        packages:
        - libglib2.0-dev
        - libgtop2-dev
        - libgranite-dev
        - libgtk-3-dev
        - libwingpanel-2.0-dev
        - meson
        - valac

    - name: Clone Wingpanel System Monitor Indicator repo
      git:
        repo: git@github.com:PlugaruT/wingpanel-indicator-sys-monitor.git
        dest: "{{wpsmi_dir}}"

    - name: Build Wingpanel System Monitor Indicator
      shell: |
        meson build --prefix=/usr
        ninja -C ./build
      args:
        chdir: "{{wpsmi_dir}}"

    - name: Install Wingpanel System Monitor Indicator
      become: yes
      command: ninja install
      args:
        chdir: "{{wpsmi_dir}}/build"

    - name: Add Flathub source
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user

    - name: Install flatpak packages
      flatpak:
        name: "{{ item }}"
        state: present
        remote: flathub
        method: user
      with_items:
        - org.telegram.desktop
        - com.spotify.Client

